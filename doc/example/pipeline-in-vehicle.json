{
    "streams": [
        {
            "id": "src_air_conditioner",
            "type": "source-stream",
            "stream-def": "CREATE SOURCE STREAM src_air_conditioner (\n  ts TIMESTAMP NOT NULL ROWTIME,\n  car_temperature FLOAT NOT NULL,\n  raw_out_temperature FLOAT NOT NULL\n) SERVER NET_SERVER OPTIONS (\n  PROTOCOL 'TCP',\n  REMOTE_HOST '127.0.0.1,\n  REMOTE_PORT '19870'\n)"
        },
        {
            "id": "src_engine",
            "type": "source-stream",
            "stream-def": "CREATE SOURCE STREAM src_engine (\n  ts TIMESTAMP NOT NULL ROWTIME,\n  rpm FLOAT NOT NULL\n) SERVER NET_SERVER OPTIONS (\n  PROTOCOL 'TCP',\n  REMOTE_HOST '127.0.0.1,\n  REMOTE_PORT '19871'\n)"
        },
        {
            "id": "src_vehicle_control",
            "type": "source-stream",
            "stream-def": "CREATE SOURCE STREAM src_vehicle_control (\n  ts TIMESTAMP NOT NULL ROWTIME,\n  raw_speed FLOAT NOT NULL,\n  speed_signal_freq FLOAT NOT NULL\n) SERVER NET_SERVER OPTIONS (\n  PROTOCOL 'TCP',\n  REMOTE_HOST '127.0.0.1,\n  REMOTE_PORT '19872'\n)"
        },
        {
            "id": "air_conditioner",
            "type": "stream",
            "stream-def": "CREATE STREAM air_conditioner (\n  ts TIMESTAMP NOT NULL ROWTIME,\n  car_temperature FLOAT NOT NULL,\n  phy_out_temperature FLOAT NOT NULL\n)"
        },
        {
            "id": "ac_engine_speed",
            "type": "stream",
            "stream-def": "CREATE STREAM ac_engine_speed (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  car_temperature FLOAT,\n  phy_out_temperature FLOAT,\n  engine_rpm FLOAT,\n  phy_speed FLOAT\n)"
        },
        {
            "id": "sampled_engine",
            "type": "stream",
            "stream-def": "CREATE STREAM sampled_engine (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  rpm FLOAT\n)"
        },
        {
            "id": "engine_speed",
            "type": "stream",
            "stream-def": "CREATE STREAM engine_speed (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  engine_rpm FLOAT\n,  phy_speed FLOAT\n)"
        },
        {
            "id": "sampled_speed",
            "type": "stream",
            "stream-def": "CREATE STREAM sampled_speed (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  raw_speed FLOAT\n)"
        },
        {
            "id": "sampled_phy_speed",
            "type": "stream",
            "stream-def": "CREATE STREAM sampled_phy_speed (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  phy_speed FLOAT\n)"
        },
        {
            "id": "stop_detection",
            "type": "stream",
            "stream-def": "CREATE STREAM stop_detection (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  stop BOOLEAN\n)"
        },
        {
            "id": "sink_cockpit",
            "type": "sink-stream",
            "stream-def": "CREATE SINK STREAM sink_cockpit (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  car_temperature FLOAT NOT NULL,\n  phy_out_temperature FLOAT NOT NULL,\n  engine_rpm FLOAT NOT NULL,\n  phy_speed FLOAT NOT NULL\n)"
        },
        {
            "id": "sink_upload",
            "type": "sink-stream",
            "stream-def": "CREATE SINK STREAM sink_upload (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  car_temperature FLOAT,\n  phy_out_temperature FLOAT,\n  engine_rpm FLOAT,\n  phy_speed FLOAT\n)"
        },
        {
            "id": "sink_health_check",
            "type": "sink-stream",
            "stream-def": "CREATE SINK STREAM sink_health_check (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  engine_rpm FLOAT NOT NULL\n,  phy_speed FLOAT NOT NULL\n)"
        },
        {
            "id": "sink_stop_detection",
            "type": "sink-stream",
            "stream-def": "CREATE SINK STREAM sink_stop_detection (\n  ts_100ms TIMESTAMP NOT NULL ROWTIME,\n  stop BOOLEAN NOT NULL\n)"
        }
    ],
    "pumps": [
        {
            "id": "pu_air_conditioner_phy_conversion",
            "pump-def": "CREATE PUMP pu_air_conditioner_phy_conversion AS\n  INSERT INTO air_conditioner (ts, car_temperature, phy_out_temperature)\n  SELECT ts, car_temperature, raw_out_temperature * 0.28\n    FROM src_air_conditioner",
            "select-stream-ids": [
                "src_air_conditioner"
            ],
            "insert-stream-id": "air_conditioner"
        },
        {
            "id": "pu_join_ac_and_engine_speed",
            "pump-def": "CREATE PUMP pu_join_ac_and_engine_speed AS\n  INSERT INTO ac_engine_speed (ts_100ms, car_temperature, phy_out_temperature)\n  SELECT es.ts_100ms, ac.car_temperature, ac.phy_out_temperature, es.rpm, es.phy_speed\n    FROM engine_speed OVER (ROWS 1 PRECEDING) es\n      LEFT OUT JOIN air_conditioner OVER (RANGE INTERVAL 100, milliseconds PRECEDING) ac",
            "select-stream-ids": [
                "air_conditioner",
                "engine_speed"
            ],
            "insert-stream-id": "ac_engine_speed"
        },
        {
            "id": "pu_interpolate_ac_engine_speed",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "ac_engine_speed"
            ],
            "insert-stream-id": "sink_cockpit"
        },
        {
            "id": "pu_passthrough_ac_engine_speed",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "ac_engine_speed"
            ],
            "insert-stream-id": "sink_upload"
        },
        {
            "id": "pu_sampling_engine",
            "pump-def": "CREATE PUMP pu_sampling_engine AS\n  INSERT INTO sampled_engine (ts_100ms, rpm)\n  SELECT DATETIME_TRUNC(100, milliseconds, ts) AS ts_100ms, FIRST_VALUE(rpm) AS rpm\n    FROM engine_speed\n    GROUP BY ts_100ms",
            "select-stream-ids": [
                "src_engine"
            ],
            "insert-stream-id": "sampled_engine"
        },
        {
            "id": "pu_sampling_and_projection_vehicle",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "src_vehicle_control"
            ],
            "insert-stream-id": "sampled_speed"
        },
        {
            "id": "pu_phy_convert_speed",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "sampled_speed"
            ],
            "insert-stream-id": "sampled_phy_speed"
        },
        {
            "id": "pu_join_engine_speed",
            "pump-def": "CREATE PUMP pu_join_engine_speed AS\n  INSERT INTO engine_speed (ts_100ms, engine_rpm, phy_speed)\n  SELECT e.ts_100ms, e.rpm, s.phy_speed\n    FROM sampled_engine OVER (ROWS 1 PRECEDING) AS e\n    LEFT OUTER JOIN sampled_phy_speed OVER (RANGE 1 seconds INTERVAL PRECEEDING) AS s\n      ON e.ts_100ms = s.ts_100ms",
            "select-stream-ids": [
                "sampled_engine",
                "sampled_phy_speed"
            ],
            "insert-stream-id": "engine_speed"
        },
        {
            "id": "pu_interpolate_engine_speed",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "engine_speed"
            ],
            "insert-stream-id": "sink_health_check"
        },
        {
            "id": "pu_selection_phy_speed",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "sampled_phy_speed"
            ],
            "insert-stream-id": "stop_detection"
        },
        {
            "id": "pu_interpolate_stop_detection",
            "pump-def": "CREATE PUMP ...",
            "select-stream-ids": [
                "stop_detection"
            ],
            "insert-stream-id": "sink_stop_detection"
        }
    ]
}
